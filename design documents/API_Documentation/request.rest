GET http://localhost:3000/users

### 3 test users to test authorization - stored in a const in server.js instead of in the database because this application will only be tested locally. No future users will be created.


POST http://localhost:3000/users
Content-Type: application/json

{
  "name": "Adam",
  "password": "password"
}

### Posts a new user with request body containing a name and password (Used strictly for testing)


POST http://localhost:3000/users
Content-Type: application/json

{
  "password": "password"
}

### Posts a new user without a name. This will fail because the name is required.


POST http://localhost:3000/users/login
Content-Type: application/json

{
  "name": "Adam",
  "password": "incorrect"
}

### Attempt to login with an invalid password. Without valid password, user cannot login and will not have access to the API.


POST http://localhost:3000/users/login
Content-Type: application/json

{
  "name": "Adam",
  "password": "password"
}

### Attempting to login with credentials that are valid. If login successful, user can access API. Returns the user JSON object instead of redirection.


GET http://localhost:3000/cities

### Returns all cities in the database.


GET http://localhost:3000/cities/:city
Content-Type: application/json

{
  "city": "dallas_tx"
}

### Returns a city by name. 

